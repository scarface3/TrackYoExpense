{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","console","log","target","onSaveExpenseFilter","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","onClick","ExpensesList","items","length","map","el","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","FilteredYear","setFilteredYear","filteredExpense","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DummyExpenses","App","setExpenses","previousExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67b20f59.chunk.js","sourcesContent":["import \"./Card.css\";\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\nexport default Card;\n","import \"./ExpensesFilter.css\";\nimport React from \"react\";\n\nconst ExpensesFilter = (props) => {\n  const ExpensesFilterHandler = (event) => {\n    console.log(event.target.value);\n    props.onSaveExpenseFilter(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={ExpensesFilterHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day \">{day}</div>\n    </div>\n  );\n};\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\n\nconst ExpenseItem = (props) => {\n  const clickHnadler = () => {};\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\" expense-item__price\">${props.amount}</div>\n        </div>\n        <button onClick={clickHnadler}>Change Title</button>\n      </Card>\n    </li>\n  );\n};\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((el) => (\n        <ExpenseItem\n          key={el.id}\n          title={el.title}\n          amount={el.amount}\n          date={el.date}\n        />\n      ))}\n    </ul>\n  );\n};\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\nconst Chart = (props) => {\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointsValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import \"./Expenses.css\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport React, { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nconst Expenses = (props) => {\n  const [FilteredYear, setFilteredYear] = useState(\"2020\");\n  const saveExpenseFilter = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    console.log(\"in expenses.js\", selectedYear);\n  };\n  console.log(props.items, \"propsss\");\n  const filteredExpense = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === FilteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={FilteredYear}\n          onSaveExpenseFilter={saveExpenseFilter}\n        />\n        <ExpensesChart expenses={filteredExpense} />\n        <ExpensesList items={filteredExpense} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  //   const [userInput, setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n  const titleChangeHandler = (event) => {\n    console.log(event.target.value);\n    setEnteredTitle(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: event.target.value,\n    // });\n    // setUserInput((previousState) => {\n    //   return {\n    //     ...previousState,\n    //     enteredTitle: event.target.value,\n    //   };\n    // });\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value,\n    // });\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            value={enteredAmount}\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            value={enteredDate}\n            min=\"2019-01-01\"\n            max=\"2021-12-31\"\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DummyExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DummyExpenses);\n  const addExpenseHandler = (expense) => {\n    setExpenses((previousExpenses) => {\n      return [expense, ...previousExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}